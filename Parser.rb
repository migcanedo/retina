#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require_relative 'Ast'
require_relative 'Lexer'
require_relative 'Errores'

class Parser < Racc::Parser

module_eval(<<'...end Parser.y/module_eval...', 'Parser.y', 245)
# Funcion que requiere el Parser para reportar un error sintactico.
def on_error(id, token, stack)
	raise SyntacticError.new(token)
end
  
# Funcion que requiere el Parser para obtener los tokens de la entrada.
def next_token
	token = @lexer.obtener_token
	return [false,false] unless token
	return [token.class,token]
end
   
# Funcion que requiere el Parser para construir el AST.
def parse(lexer)
	@yydebug = true
	@lexer = lexer
	@tokens = []
	ast = do_parse
	return ast
end
...end Parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    33,    34,   134,    33,    34,    39,    27,    28,    39,    41,
     3,    33,    34,   147,   219,    38,    39,    40,    38,    27,
    28,    32,    33,    34,    32,   185,    38,    39,    27,    28,
    27,    28,    32,     4,   178,   180,    94,    38,    26,    33,
    34,   133,   177,    32,    39,    35,    36,    48,    35,    36,
    48,   170,   146,   130,    38,   131,    35,    36,    48,   188,
    32,    33,    34,   122,   189,   214,    39,    35,    36,    48,
    27,    28,    33,    34,    33,    34,    38,    39,   223,    39,
   139,   224,    32,   140,    35,    36,    48,    38,   179,    38,
    77,    78,    64,    32,   122,    32,   137,   192,    73,    74,
    33,    34,   122,    99,   123,    39,    35,    36,    33,    34,
   175,    33,    34,    39,    96,    38,    39,    35,    36,    35,
    36,    32,    95,    38,    27,    28,    38,    27,    28,    32,
   174,    90,    32,   199,    33,    34,    88,    33,    34,    39,
    88,    88,    39,   132,    88,    35,    36,    87,    62,    38,
   206,    60,    38,    35,    36,    32,    35,    36,    32,    59,
    33,    34,    58,    33,    34,    39,   135,   164,    39,   101,
    55,    33,    34,    54,   218,    38,    39,   184,    38,    35,
    36,    32,    35,    36,    32,    53,    38,   221,   222,    33,
    34,   144,    32,    52,    39,   226,    45,    33,    34,   228,
    44,    43,    39,   233,    38,    35,    36,   142,    35,    36,
    32,   235,    38,    77,    78,    64,    35,    36,    32,   236,
     4,    73,    74,    33,    34,    33,    34,    23,    39,    22,
    39,   242,    33,    34,    35,    36,     7,    39,    38,     6,
    38,   246,    35,    36,    32,   nil,    32,    38,   nil,   nil,
   nil,    33,    34,    32,   nil,   nil,    39,   nil,    33,    34,
    33,    34,   nil,    39,   nil,    39,    38,   nil,    35,    36,
    35,    36,    32,    38,   nil,    38,   nil,    35,    36,    32,
   nil,    32,   nil,   nil,   nil,   nil,    33,    34,   nil,   nil,
   nil,    39,   nil,    33,    34,   nil,    35,    36,    39,   nil,
   nil,    38,   nil,    35,    36,    35,    36,    32,    38,   nil,
   nil,   nil,    33,    34,    32,    33,    34,    39,   nil,   nil,
    39,   nil,   nil,   nil,   nil,   nil,   nil,    38,   nil,   nil,
    38,    35,    36,    32,   nil,   nil,    32,   nil,    35,    36,
   nil,    33,    34,   nil,    33,    34,    39,   nil,   nil,    39,
   nil,   nil,   nil,   nil,   nil,   nil,    38,    35,    36,    38,
    35,    36,    32,    33,    34,    32,   nil,   nil,    39,   nil,
    33,    34,   nil,   nil,   nil,    39,   nil,   nil,    38,   nil,
   nil,   nil,   nil,   nil,    32,    38,    35,    36,   nil,    35,
    36,    32,    33,    34,   nil,   nil,   nil,    39,    83,    33,
    34,   nil,   nil,   nil,    39,   nil,   nil,    38,    35,    36,
   nil,   nil,   nil,    32,    38,    35,    36,   nil,    33,    34,
    32,    33,    34,    39,   nil,   nil,    39,   nil,   nil,   nil,
   nil,   nil,   nil,    38,   nil,   nil,    38,    35,    36,    32,
   nil,   nil,    32,   nil,    35,    36,   nil,    33,    34,   nil,
    33,    34,    39,   nil,   nil,    39,   nil,   nil,   nil,   nil,
   nil,   nil,    38,    35,    36,    38,    35,    36,    32,    33,
    34,    32,   nil,   nil,    39,   nil,    33,    34,   nil,   nil,
   nil,    39,   nil,   nil,    38,   nil,   nil,   nil,   nil,   nil,
    32,    38,    35,    36,   nil,    35,    36,    32,    33,    34,
   nil,   nil,   nil,    39,   197,    33,    34,   nil,   nil,   nil,
    39,   nil,   nil,    38,    35,    36,   nil,   nil,   nil,    32,
    38,    35,    36,   nil,    33,    34,    32,   nil,   nil,    39,
    75,    76,    77,    78,    64,   nil,   nil,   nil,   nil,    38,
    73,    74,   nil,    35,    36,    32,   nil,   nil,   nil,   nil,
    35,    36,   nil,   nil,   nil,   nil,    63,    65,    66,    67,
    69,    72,   nil,    75,    76,    77,    78,    64,   nil,    35,
    36,    68,    71,    73,    74,    63,    65,    66,    67,    69,
    72,   nil,    75,    76,    77,    78,    64,   nil,   nil,    89,
    68,    71,    73,    74,    63,    65,    66,    67,    69,    72,
   nil,    75,    76,    77,    78,    64,   nil,   nil,   200,    68,
    71,    73,    74,    63,    65,    66,    67,    69,    72,   nil,
    75,    76,    77,    78,    64,   227,   nil,   nil,    68,    71,
    73,    74,    63,    65,    66,    67,    69,    72,   nil,    75,
    76,    77,    78,    64,   143,   nil,   nil,    68,    71,    73,
    74,   nil,    63,    65,    66,    67,    69,    72,   193,    75,
    76,    77,    78,    64,   nil,   nil,   nil,    68,    71,    73,
    74,   nil,    63,    65,    66,    67,    69,    72,    70,    75,
    76,    77,    78,    64,   nil,   nil,   nil,    68,    71,    73,
    74,   nil,   nil,   nil,   nil,   195,    63,    65,    66,    67,
    69,    72,   nil,    75,    76,    77,    78,    64,   nil,   nil,
   nil,    68,    71,    73,    74,   nil,   nil,   nil,   nil,   243,
    63,    65,    66,    67,    69,    72,   nil,    75,    76,    77,
    78,    64,   nil,   238,   nil,    68,    71,    73,    74,   nil,
   nil,   nil,   nil,   237,    63,    65,    66,    67,    69,    72,
   nil,    75,    76,    77,    78,    64,   nil,   nil,   nil,    68,
    71,    73,    74,   nil,   nil,   nil,   nil,   220,    63,    65,
    66,    67,    69,    72,   nil,    75,    76,    77,    78,    64,
   nil,   187,   nil,    68,    71,    73,    74,   nil,   nil,   nil,
   nil,   186,    63,    65,    66,    67,    69,    72,   nil,    75,
    76,    77,    78,    64,   nil,   nil,   nil,    68,    71,    73,
    74,   157,   159,   162,   148,    85,   216,   149,   nil,   nil,
   153,   155,   nil,   nil,   161,   nil,   nil,   nil,   150,   nil,
   nil,   154,   157,   159,   162,   148,   nil,   nil,   149,   nil,
   nil,   153,   155,   nil,   nil,   161,   nil,   nil,   nil,   150,
   nil,   nil,   154,   157,   159,   162,   148,   nil,   207,   149,
   nil,   nil,   153,   155,   nil,   nil,   161,   nil,   nil,   nil,
   150,   nil,   nil,   154,   157,   159,   162,   148,   nil,   209,
   149,   nil,   211,   153,   155,   nil,   nil,   161,   nil,   nil,
   nil,   150,   nil,   nil,   154,    17,    18,    19,     8,   nil,
   202,    10,   nil,   nil,    14,    16,   nil,   nil,    20,   nil,
   nil,   157,   159,   162,   148,    13,   212,   149,   nil,   nil,
   153,   155,   nil,   nil,   161,   nil,   nil,   nil,   150,   nil,
   nil,   154,    17,    18,    19,     8,   nil,    56,    10,   nil,
   nil,    14,    16,   nil,   nil,    20,   nil,   nil,   157,   159,
   162,   148,    13,   190,   149,   nil,   nil,   153,   155,   nil,
   nil,   161,   nil,   nil,   nil,   150,   nil,   nil,   154,    17,
    18,    19,     8,   nil,   124,    10,   nil,   nil,    14,    16,
   nil,   nil,    20,   nil,    17,    18,    19,     8,   nil,    13,
    10,   nil,   nil,    14,    16,   nil,   nil,    20,   nil,   157,
   159,   162,   148,   nil,    13,   149,   nil,   nil,   153,   155,
   nil,   nil,   161,   nil,   nil,   nil,   150,   nil,   nil,   154,
    17,    18,    19,     8,   nil,   128,    10,   nil,   nil,    14,
    16,   nil,   nil,    20,   nil,   157,   159,   162,   148,   nil,
    13,   149,   nil,   nil,   153,   155,   nil,   nil,   161,   nil,
   nil,   nil,   150,   nil,   nil,   154,    17,    18,    19,     8,
   nil,   229,    10,   nil,   nil,    14,    16,   nil,   nil,    20,
   nil,   nil,   157,   159,   162,   148,    13,   231,   149,   nil,
   nil,   153,   155,   nil,   nil,   161,   nil,   nil,   nil,   150,
   nil,   nil,   154,    17,    18,    19,     8,   nil,    97,    10,
   nil,   nil,    14,    16,   nil,   nil,    20,   nil,    17,    18,
    19,     8,   nil,    13,    10,   nil,   nil,    14,    16,   nil,
   nil,    20,   nil,   nil,   157,   159,   162,   148,    13,   239,
   149,   nil,   nil,   153,   155,   nil,   nil,   161,   nil,   nil,
   nil,   150,   nil,   nil,   154,   157,   159,   162,   148,   nil,
   nil,   149,   nil,   nil,   153,   155,   nil,   nil,   161,   nil,
   nil,   nil,   150,   nil,   nil,   154,    17,    18,    19,     8,
   nil,   nil,    10,   nil,   nil,    14,    16,   nil,   nil,    20,
   nil,   nil,    17,    18,    19,     8,    13,   165,    10,   nil,
   nil,    14,    16,   nil,   nil,    20,   nil,   157,   159,   162,
   148,   nil,    13,   149,   nil,   nil,   153,   155,   nil,   nil,
   161,   nil,   nil,   nil,   150,   nil,   nil,   154,    17,    18,
    19,     8,   nil,   110,    10,   nil,   111,    14,    16,   nil,
   nil,    20,   nil,   nil,   157,   159,   162,   148,    13,   244,
   149,   nil,   nil,   153,   155,   nil,   nil,   161,   nil,   nil,
   nil,   150,   nil,   nil,   154,    17,    18,    19,     8,   nil,
   nil,    10,   nil,   nil,    14,    16,   nil,   nil,    20,   nil,
   157,   159,   162,   148,   nil,    13,   149,   nil,   nil,   153,
   155,   nil,   nil,   161,   nil,   nil,   nil,   150,   nil,   nil,
   154,   121,    63,    65,    66,    67,    69,    72,   nil,    75,
    76,    77,    78,    64,   nil,   nil,   nil,    68,    71,    73,
    74,    63,    65,    66,    67,    69,    72,   nil,    75,    76,
    77,    78,    64,   nil,   nil,   nil,    68,    71,    73,    74,
    63,    65,    66,    67,    69,    72,   nil,    75,    76,    77,
    78,    64,   nil,   nil,   nil,    68,    71,    73,    74,    63,
    65,    66,    67,    69,    72,   nil,    75,    76,    77,    78,
    64,   nil,   nil,   nil,   nil,   nil,    73,    74,    63,    65,
    66,    67,    69,    72,   nil,    75,    76,    77,    78,    64,
   nil,   nil,   nil,    68,    71,    73,    74,    63,    65,    66,
    67,    69,    72,   nil,    75,    76,    77,    78,    64,   nil,
   nil,   nil,    68,    71,    73,    74,    63,    65,    66,    67,
    69,    72,   nil,    75,    76,    77,    78,    64,   nil,   nil,
   nil,    68,    71,    73,    74,    63,    65,    66,    67,    69,
    72,   nil,    75,    76,    77,    78,    64,   nil,   nil,   nil,
   nil,    71,    73,    74,    63,    65,    66,    67,    69,    72,
   nil,    75,    76,    77,    78,    64,   nil,   nil,   nil,    68,
    71,    73,    74,    63,    65,    66,    67,    69,    72,   nil,
    75,    76,    77,    78,    64,   nil,   nil,   nil,    68,    71,
    73,    74,    75,    76,    77,    78,    64,    75,    76,    77,
    78,    64,    73,    74,   nil,   nil,   nil,    73,    74,    75,
    76,    77,    78,    64,    75,    76,    77,    78,    64,    73,
    74,   nil,   nil,   nil,    73,    74,    75,    76,    77,    78,
    64,   nil,   nil,   nil,   nil,   nil,    73,    74 ]

racc_action_check = [
   159,   159,    94,   162,   162,   159,     8,     8,   162,    13,
     0,    88,    88,   131,   203,   159,    88,    13,   162,   148,
   148,   159,    19,    19,   162,   166,    88,    19,    53,    53,
   147,   147,    88,     0,   154,   157,    53,    19,     8,    18,
    18,    94,   154,    19,    18,   159,   159,   159,   162,   162,
   162,   148,   131,    92,    18,    92,    88,    88,    88,   168,
    18,   199,   199,   198,   169,   198,   199,    19,    19,    19,
    60,    60,    99,    99,   149,   149,   199,    99,   210,   149,
   112,   210,   199,   112,    18,    18,    18,    99,   155,   149,
   118,   118,   118,    99,   102,   149,   102,   171,   118,   118,
    64,    64,    84,    59,    84,    64,   199,   199,    10,    10,
   152,   227,   227,    10,    57,    64,   227,    99,    99,   149,
   149,    64,    55,    10,   130,   130,   227,   134,   134,    10,
   151,    52,   227,   179,    14,    14,   181,    63,    63,    14,
    50,   183,    63,    93,    46,    64,    64,    44,    36,    14,
   191,    31,    63,    10,    10,    14,   227,   227,    63,    30,
   150,   150,    29,    62,    62,   150,    98,   138,    62,    62,
    24,   238,   238,    23,   201,   150,   238,   163,    62,    14,
    14,   150,    63,    63,    62,    22,   238,   205,   208,   143,
   143,   129,   238,    21,   143,   213,    17,    20,    20,   217,
    16,    15,    20,   225,   143,   150,   150,   125,    62,    62,
   143,   230,    20,   117,   117,   117,   238,   238,    20,   232,
     7,   117,   117,   153,   153,    66,    66,     5,   153,     4,
    66,   240,    87,    87,   143,   143,     2,    87,   153,     1,
    66,   245,    20,    20,   153,   nil,    66,    87,   nil,   nil,
   nil,    65,    65,    87,   nil,   nil,    65,   nil,   161,   161,
    67,    67,   nil,   161,   nil,    67,    65,   nil,   153,   153,
    66,    66,    65,   161,   nil,    67,   nil,    87,    87,   161,
   nil,    67,   nil,   nil,   nil,   nil,    78,    78,   nil,   nil,
   nil,    78,   nil,    77,    77,   nil,    65,    65,    77,   nil,
   nil,    78,   nil,   161,   161,    67,    67,    78,    77,   nil,
   nil,   nil,    71,    71,    77,    76,    76,    71,   nil,   nil,
    76,   nil,   nil,   nil,   nil,   nil,   nil,    71,   nil,   nil,
    76,    78,    78,    71,   nil,   nil,    76,   nil,    77,    77,
   nil,    68,    68,   nil,    38,    38,    68,   nil,   nil,    38,
   nil,   nil,   nil,   nil,   nil,   nil,    68,    71,    71,    38,
    76,    76,    68,    39,    39,    38,   nil,   nil,    39,   nil,
    40,    40,   nil,   nil,   nil,    40,   nil,   nil,    39,   nil,
   nil,   nil,   nil,   nil,    39,    40,    68,    68,   nil,    38,
    38,    40,    41,    41,   nil,   nil,   nil,    41,    41,    75,
    75,   nil,   nil,   nil,    75,   nil,   nil,    41,    39,    39,
   nil,   nil,   nil,    41,    75,    40,    40,   nil,    74,    74,
    75,   187,   187,    74,   nil,   nil,   187,   nil,   nil,   nil,
   nil,   nil,   nil,    74,   nil,   nil,   187,    41,    41,    74,
   nil,   nil,   187,   nil,    75,    75,   nil,    73,    73,   nil,
    72,    72,    73,   nil,   nil,    72,   nil,   nil,   nil,   nil,
   nil,   nil,    73,    74,    74,    72,   187,   187,    73,    69,
    69,    72,   nil,   nil,    69,   nil,   122,   122,   nil,   nil,
   nil,   122,   nil,   nil,    69,   nil,   nil,   nil,   nil,   nil,
    69,   122,    73,    73,   nil,    72,    72,   122,   178,   178,
   nil,   nil,   nil,   178,   178,   177,   177,   nil,   nil,   nil,
   177,   nil,   nil,   178,    69,    69,   nil,   nil,   nil,   178,
   177,   122,   122,   nil,    32,    32,   177,   nil,   nil,    32,
   107,   107,   107,   107,   107,   nil,   nil,   nil,   nil,    32,
   107,   107,   nil,   178,   178,    32,   nil,   nil,   nil,   nil,
   177,   177,   nil,   nil,   nil,   nil,    51,    51,    51,    51,
    51,    51,   nil,    51,    51,    51,    51,    51,   nil,    32,
    32,    51,    51,    51,    51,   182,   182,   182,   182,   182,
   182,   nil,   182,   182,   182,   182,   182,   nil,   nil,    51,
   182,   182,   182,   182,   215,   215,   215,   215,   215,   215,
   nil,   215,   215,   215,   215,   215,   nil,   nil,   182,   215,
   215,   215,   215,   126,   126,   126,   126,   126,   126,   nil,
   126,   126,   126,   126,   126,   215,   nil,   nil,   126,   126,
   126,   126,   172,   172,   172,   172,   172,   172,   nil,   172,
   172,   172,   172,   172,   126,   nil,   nil,   172,   172,   172,
   172,   nil,    37,    37,    37,    37,    37,    37,   172,    37,
    37,    37,    37,    37,   nil,   nil,   nil,    37,    37,    37,
    37,   nil,   176,   176,   176,   176,   176,   176,    37,   176,
   176,   176,   176,   176,   nil,   nil,   nil,   176,   176,   176,
   176,   nil,   nil,   nil,   nil,   176,   241,   241,   241,   241,
   241,   241,   nil,   241,   241,   241,   241,   241,   nil,   nil,
   nil,   241,   241,   241,   241,   nil,   nil,   nil,   nil,   241,
   234,   234,   234,   234,   234,   234,   nil,   234,   234,   234,
   234,   234,   nil,   234,   nil,   234,   234,   234,   234,   nil,
   nil,   nil,   nil,   234,   204,   204,   204,   204,   204,   204,
   nil,   204,   204,   204,   204,   204,   nil,   nil,   nil,   204,
   204,   204,   204,   nil,   nil,   nil,   nil,   204,   167,   167,
   167,   167,   167,   167,   nil,   167,   167,   167,   167,   167,
   nil,   167,   nil,   167,   167,   167,   167,   nil,   nil,   nil,
   nil,   167,    42,    42,    42,    42,    42,    42,   nil,    42,
    42,    42,    42,    42,   nil,   nil,   nil,    42,    42,    42,
    42,   200,   200,   200,   200,    42,   200,   200,   nil,   nil,
   200,   200,   nil,   nil,   200,   nil,   nil,   nil,   200,   nil,
   nil,   200,   189,   189,   189,   189,   nil,   nil,   189,   nil,
   nil,   189,   189,   nil,   nil,   189,   nil,   nil,   nil,   189,
   nil,   nil,   189,   192,   192,   192,   192,   nil,   192,   192,
   nil,   nil,   192,   192,   nil,   nil,   192,   nil,   nil,   nil,
   192,   nil,   nil,   192,   193,   193,   193,   193,   nil,   193,
   193,   nil,   193,   193,   193,   nil,   nil,   193,   nil,   nil,
   nil,   193,   nil,   nil,   193,   186,   186,   186,   186,   nil,
   186,   186,   nil,   nil,   186,   186,   nil,   nil,   186,   nil,
   nil,   195,   195,   195,   195,   186,   195,   195,   nil,   nil,
   195,   195,   nil,   nil,   195,   nil,   nil,   nil,   195,   nil,
   nil,   195,    26,    26,    26,    26,   nil,    26,    26,   nil,
   nil,    26,    26,   nil,   nil,    26,   nil,   nil,   170,   170,
   170,   170,    26,   170,   170,   nil,   nil,   170,   170,   nil,
   nil,   170,   nil,   nil,   nil,   170,   nil,   nil,   170,    85,
    85,    85,    85,   nil,    85,    85,   nil,   nil,    85,    85,
   nil,   nil,    85,   nil,    43,    43,    43,    43,   nil,    85,
    43,   nil,   nil,    43,    43,   nil,   nil,    43,   nil,   184,
   184,   184,   184,   nil,    43,   184,   nil,   nil,   184,   184,
   nil,   nil,   184,   nil,   nil,   nil,   184,   nil,   nil,   184,
    89,    89,    89,    89,   nil,    89,    89,   nil,   nil,    89,
    89,   nil,   nil,    89,   nil,   211,   211,   211,   211,   nil,
    89,   211,   nil,   nil,   211,   211,   nil,   nil,   211,   nil,
   nil,   nil,   211,   nil,   nil,   211,   220,   220,   220,   220,
   nil,   220,   220,   nil,   nil,   220,   220,   nil,   nil,   220,
   nil,   nil,   224,   224,   224,   224,   220,   224,   224,   nil,
   nil,   224,   224,   nil,   nil,   224,   nil,   nil,   nil,   224,
   nil,   nil,   224,    58,    58,    58,    58,   nil,    58,    58,
   nil,   nil,    58,    58,   nil,   nil,    58,   nil,     6,     6,
     6,     6,   nil,    58,     6,   nil,   nil,     6,     6,   nil,
   nil,     6,   nil,   nil,   237,   237,   237,   237,     6,   237,
   237,   nil,   nil,   237,   237,   nil,   nil,   237,   nil,   nil,
   nil,   237,   nil,   nil,   237,   146,   146,   146,   146,   nil,
   nil,   146,   nil,   nil,   146,   146,   nil,   nil,   146,   nil,
   nil,   nil,   146,   nil,   nil,   146,     3,     3,     3,     3,
   nil,   nil,     3,   nil,   nil,     3,     3,   nil,   nil,     3,
   nil,   nil,   140,   140,   140,   140,     3,   140,   140,   nil,
   nil,   140,   140,   nil,   nil,   140,   nil,   133,   133,   133,
   133,   nil,   140,   133,   nil,   nil,   133,   133,   nil,   nil,
   133,   nil,   nil,   nil,   133,   nil,   nil,   133,    70,    70,
    70,    70,   nil,    70,    70,   nil,    70,    70,    70,   nil,
   nil,    70,   nil,   nil,   243,   243,   243,   243,    70,   243,
   243,   nil,   nil,   243,   243,   nil,   nil,   243,   nil,   nil,
   nil,   243,   nil,   nil,   243,   111,   111,   111,   111,   nil,
   nil,   111,   nil,   nil,   111,   111,   nil,   nil,   111,   nil,
   175,   175,   175,   175,   nil,   111,   175,   nil,   nil,   175,
   175,   nil,   nil,   175,   nil,   nil,   nil,   175,   nil,   nil,
   175,    80,    80,    80,    80,    80,    80,    80,   nil,    80,
    80,    80,    80,    80,   nil,   nil,   nil,    80,    80,    80,
    80,   173,   173,   173,   173,   173,   173,   nil,   173,   173,
   173,   173,   173,   nil,   nil,   nil,   173,   173,   173,   173,
    82,    82,    82,    82,    82,    82,   nil,    82,    82,    82,
    82,    82,   nil,   nil,   nil,    82,    82,    82,    82,   113,
   113,   113,   113,   113,   113,   nil,   113,   113,   113,   113,
   113,   nil,   nil,   nil,   nil,   nil,   113,   113,    81,    81,
    81,    81,    81,    81,   nil,    81,    81,    81,    81,    81,
   nil,   nil,   nil,    81,    81,    81,    81,    47,    47,    47,
    47,    47,    47,   nil,    47,    47,    47,    47,    47,   nil,
   nil,   nil,    47,    47,    47,    47,   196,   196,   196,   196,
   196,   196,   nil,   196,   196,   196,   196,   196,   nil,   nil,
   nil,   196,   196,   196,   196,   108,   108,   108,   108,   108,
   108,   nil,   108,   108,   108,   108,   108,   nil,   nil,   nil,
   nil,   108,   108,   108,   136,   136,   136,   136,   136,   136,
   nil,   136,   136,   136,   136,   136,   nil,   nil,   nil,   136,
   136,   136,   136,   141,   141,   141,   141,   141,   141,   nil,
   141,   141,   141,   141,   141,   nil,   nil,   nil,   141,   141,
   141,   141,   114,   114,   114,   114,   114,   105,   105,   105,
   105,   105,   114,   114,   nil,   nil,   nil,   105,   105,   103,
   103,   103,   103,   103,   106,   106,   106,   106,   106,   103,
   103,   nil,   nil,   nil,   106,   106,   109,   109,   109,   109,
   109,   nil,   nil,   nil,   nil,   nil,   109,   109 ]

racc_action_pointer = [
   -13,   216,   229,  1136,   179,   227,  1078,   174,     4,   nil,
   104,   nil,   nil,     0,   130,   194,   150,   146,    35,    18,
   193,   158,   176,   173,   135,   nil,   902,   nil,   nil,   128,
   109,   144,   520,   nil,   nil,   nil,   139,   641,   340,   359,
   366,   388,   781,   954,   106,   nil,   136,  1376,   nil,   nil,
   132,   545,   124,    26,   nil,   115,   nil,    79,  1063,    86,
    68,   nil,   159,   133,    96,   247,   221,   256,   337,   465,
  1188,   308,   446,   443,   414,   395,   311,   289,   282,   nil,
  1281,  1357,  1319,   nil,    94,   939,   nil,   228,     7,   990,
   nil,   nil,    45,    93,    -4,   nil,   nil,   nil,   131,    68,
   nil,   nil,    86,  1481,   nil,  1469,  1486,   512,  1414,  1498,
   nil,  1225,    45,  1338,  1464,   nil,   nil,   193,    70,   nil,
   nil,   nil,   472,   nil,   nil,   172,   602,   nil,   nil,   156,
   122,     7,   nil,  1167,   125,   nil,  1433,   nil,   132,   nil,
  1152,  1452,   nil,   185,   nil,   nil,  1115,    28,    17,    70,
   156,    95,   103,   219,    25,    38,   nil,   -15,   nil,    -4,
   nil,   254,    -1,   132,   nil,   nil,   -10,   757,    24,    19,
   918,    63,   621,  1300,   nil,  1240,   661,   501,   494,    92,
   nil,   128,   564,   133,   969,   nil,   865,   417,   nil,   802,
   nil,   115,   823,   844,   nil,   881,  1395,   nil,    55,    57,
   781,   139,   nil,   -21,   733,   152,   nil,   nil,   153,   nil,
    43,  1005,   nil,   160,   nil,   583,   nil,   164,   nil,   nil,
  1026,   nil,   nil,   nil,  1042,   168,   nil,   107,   nil,   nil,
   176,   nil,   184,   nil,   709,   nil,   nil,  1094,   167,   nil,
   196,   685,   nil,  1204,   nil,   206,   nil ]

racc_action_default = [
  -105,  -105,  -105,  -105,  -105,  -105,  -105,    -3,  -105,   -69,
  -105,   -67,   -68,  -105,  -105,  -105,  -105,  -105,  -105,  -105,
  -105,  -105,  -105,  -105,  -105,    -4,  -105,   -37,   -36,  -105,
  -105,  -105,  -105,   -82,   -83,   -81,   -84,  -105,  -105,  -105,
  -105,  -105,  -105,   -64,  -105,   -74,   -72,   -78,   -77,   -75,
   -73,  -105,  -105,  -105,   247,  -105,   -27,  -105,  -105,   -34,
   -32,  -101,  -105,  -105,  -105,  -105,  -105,  -105,  -105,  -105,
  -105,  -105,  -105,  -105,  -105,  -105,  -105,  -105,  -105,   -85,
  -105,   -66,   -79,   -71,  -105,  -105,   -65,  -105,  -105,  -105,
    -1,   -21,  -105,  -105,  -105,    -2,   -25,   -26,  -105,  -105,
   -33,  -104,  -105,   -95,   -90,   -96,   -94,   -93,  -100,   -91,
   -40,  -105,  -105,   -99,   -92,   -98,   -97,   -86,   -87,   -88,
   -89,  -102,  -105,   -70,   -49,  -105,  -105,   -76,   -55,  -105,
  -105,  -105,   -23,  -105,  -105,   -24,   -35,  -103,  -105,   -38,
  -105,   -80,   -48,  -105,   -54,   -22,  -105,  -105,  -105,  -105,
  -105,  -105,  -105,  -105,  -105,  -105,   -10,  -105,   -11,  -105,
   -12,  -105,  -105,  -105,   -42,   -41,  -105,  -105,  -105,  -105,
  -105,  -105,  -105,    -9,    -6,   -19,  -105,  -105,  -105,  -105,
   -18,   -16,  -105,   -17,  -105,   -39,  -105,  -105,    -5,  -105,
   -31,  -105,  -105,  -105,   -20,  -105,   -13,   -15,  -105,  -105,
  -105,  -105,   -53,  -105,  -105,  -105,   -29,   -30,  -105,   -45,
  -105,  -105,   -57,  -105,   -14,  -105,   -63,  -105,    -8,   -52,
  -105,    -7,   -28,   -43,  -105,  -105,   -56,  -105,   -62,   -51,
  -105,   -46,  -105,   -47,  -105,   -50,   -44,  -105,  -105,   -61,
  -105,  -105,   -60,  -105,   -59,  -105,   -58 ]

racc_goto_table = [
    37,    46,    50,    93,    42,    91,     1,     5,    92,   127,
    51,    84,   nil,    25,   nil,   nil,   nil,   nil,    29,   nil,
    21,   nil,    61,    24,   nil,   nil,   nil,   nil,    79,    80,
    81,    82,   102,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    57,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    82,   103,   104,   105,   106,   107,   108,   109,
    86,   113,   114,   115,   116,   117,   118,   119,   120,   nil,
   100,   nil,   nil,   nil,   nil,    98,   nil,   126,   nil,   nil,
    93,   nil,   145,   nil,   163,   nil,   nil,   112,   nil,   136,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   169,   nil,   nil,
   nil,   nil,   125,   nil,   151,   nil,   129,   nil,   nil,   nil,
   nil,   nil,   141,   nil,   nil,   nil,   nil,   168,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   138,   nil,
   nil,   nil,   nil,   167,   nil,   nil,   nil,   nil,   nil,   172,
   173,   191,   181,   176,   nil,   183,   194,   nil,   198,   nil,
   nil,   182,   nil,   nil,   nil,   201,   nil,   166,   171,   nil,
   205,   nil,   nil,   208,   210,   nil,   213,   196,    82,   nil,
   nil,   217,   nil,   nil,   nil,   nil,   nil,   204,   nil,   nil,
   nil,   nil,   225,   nil,   nil,   nil,   nil,   nil,   nil,   215,
   nil,   nil,   nil,   nil,   nil,   232,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   203,   nil,   nil,   nil,   nil,   240,   nil,
   nil,   nil,   nil,   nil,   245,   nil,   nil,   234,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   241,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   230 ]

racc_goto_check = [
     9,    14,    14,     7,     9,    15,     3,     1,     5,    22,
     9,    13,   nil,     3,   nil,   nil,   nil,   nil,    17,   nil,
     2,   nil,     9,     2,   nil,   nil,   nil,   nil,     9,     9,
     9,     9,    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     9,     9,     9,     9,     9,     9,     9,     9,
     2,     9,     9,     9,     9,     9,     9,     9,     9,   nil,
    17,   nil,   nil,   nil,   nil,     2,   nil,     9,   nil,   nil,
     7,   nil,    15,   nil,     7,   nil,   nil,     2,   nil,     9,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     7,   nil,   nil,
   nil,   nil,     2,   nil,     6,   nil,     2,   nil,   nil,   nil,
   nil,   nil,     9,   nil,   nil,   nil,   nil,     6,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,
   nil,   nil,   nil,     9,   nil,   nil,   nil,   nil,   nil,     9,
     9,     6,    14,     9,   nil,    14,     6,   nil,    13,   nil,
   nil,     9,   nil,   nil,   nil,     6,   nil,     2,    17,   nil,
     6,   nil,   nil,     6,     6,   nil,     6,     9,     9,   nil,
   nil,     6,   nil,   nil,   nil,   nil,   nil,     9,   nil,   nil,
   nil,   nil,     6,   nil,   nil,   nil,   nil,   nil,   nil,     9,
   nil,   nil,   nil,   nil,   nil,     6,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,     6,   nil,
   nil,   nil,   nil,   nil,     6,   nil,   nil,     9,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     9,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2 ]

racc_goto_pointer = [
   nil,     7,    17,     6,   nil,   -45,   -29,   -50,   nil,   -10,
   nil,   nil,   nil,   -30,   -17,   -48,   nil,    10,   nil,   nil,
   nil,   nil,   -79 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     2,   nil,   nil,    30,   152,    47,
   156,   158,   160,   nil,   nil,   nil,     9,   nil,    31,    11,
    12,    15,    49 ]

racc_reduce_table = [
  0, 0, :racc_error,
  4, 53, :_reduce_1,
  5, 53, :_reduce_2,
  2, 55, :_reduce_3,
  3, 55, :_reduce_4,
  8, 56, :_reduce_5,
  7, 56, :_reduce_6,
  10, 56, :_reduce_7,
  9, 56, :_reduce_8,
  2, 60, :_reduce_9,
  1, 60, :_reduce_10,
  1, 60, :_reduce_11,
  1, 60, :_reduce_12,
  3, 60, :_reduce_13,
  4, 60, :_reduce_14,
  3, 60, :_reduce_15,
  2, 60, :_reduce_16,
  2, 60, :_reduce_17,
  2, 60, :_reduce_18,
  2, 58, :_reduce_19,
  3, 58, :_reduce_20,
  1, 57, :_reduce_21,
  3, 57, :_reduce_22,
  2, 67, :_reduce_23,
  5, 68, :_reduce_24,
  4, 68, :_reduce_25,
  4, 68, :_reduce_26,
  3, 68, :_reduce_27,
  5, 64, :_reduce_28,
  4, 64, :_reduce_29,
  4, 64, :_reduce_30,
  3, 64, :_reduce_31,
  2, 69, :_reduce_32,
  3, 69, :_reduce_33,
  2, 70, :_reduce_34,
  4, 70, :_reduce_35,
  1, 59, :_reduce_36,
  1, 59, :_reduce_37,
  5, 71, :_reduce_38,
  7, 71, :_reduce_39,
  4, 71, :_reduce_40,
  6, 71, :_reduce_41,
  6, 71, :_reduce_42,
  5, 62, :_reduce_43,
  7, 62, :_reduce_44,
  4, 62, :_reduce_45,
  6, 62, :_reduce_46,
  6, 62, :_reduce_47,
  5, 72, :_reduce_48,
  4, 72, :_reduce_49,
  11, 72, :_reduce_50,
  10, 72, :_reduce_51,
  9, 72, :_reduce_52,
  8, 72, :_reduce_53,
  5, 72, :_reduce_54,
  4, 72, :_reduce_55,
  5, 63, :_reduce_56,
  4, 63, :_reduce_57,
  11, 63, :_reduce_58,
  10, 63, :_reduce_59,
  9, 63, :_reduce_60,
  8, 63, :_reduce_61,
  5, 63, :_reduce_62,
  4, 63, :_reduce_63,
  2, 54, :_reduce_64,
  3, 54, :_reduce_65,
  3, 73, :_reduce_66,
  1, 73, :_reduce_67,
  1, 73, :_reduce_68,
  1, 73, :_reduce_69,
  4, 73, :_reduce_70,
  3, 73, :_reduce_71,
  2, 73, :_reduce_72,
  2, 73, :_reduce_73,
  2, 73, :_reduce_74,
  1, 66, :_reduce_75,
  3, 66, :_reduce_76,
  1, 74, :_reduce_77,
  1, 74, :_reduce_78,
  1, 65, :_reduce_79,
  3, 65, :_reduce_80,
  1, 61, :_reduce_81,
  1, 61, :_reduce_82,
  1, 61, :_reduce_83,
  1, 61, :_reduce_84,
  2, 61, :_reduce_85,
  3, 61, :_reduce_86,
  3, 61, :_reduce_87,
  3, 61, :_reduce_88,
  3, 61, :_reduce_89,
  3, 61, :_reduce_90,
  3, 61, :_reduce_91,
  3, 61, :_reduce_92,
  3, 61, :_reduce_93,
  3, 61, :_reduce_94,
  3, 61, :_reduce_95,
  3, 61, :_reduce_96,
  3, 61, :_reduce_97,
  3, 61, :_reduce_98,
  3, 61, :_reduce_99,
  3, 61, :_reduce_100,
  2, 61, :_reduce_101,
  3, 61, :_reduce_102,
  4, 61, :_reduce_103,
  3, 61, :_reduce_104 ]

racc_reduce_n = 105

racc_shift_n = 247

racc_token_table = {
  false => 0,
  :error => 1,
  TkTipo => 2,
  TkTipo => 3,
  TkBoolean => 4,
  TkBoolean => 5,
  TkFlecha => 6,
  TkPuntoYComa => 7,
  TkComa => 8,
  TkAbreParentesis => 9,
  TkCierraParentesis => 10,
  TkIgual => 11,
  TkDiferente => 12,
  TkMenorIgualQue => 13,
  TkMayorIgualQue => 14,
  TkMayorQue => 15,
  TkMenorQue => 16,
  TkAsignacion => 17,
  TkSuma => 18,
  TkResta => 19,
  TkMultiplicacion => 20,
  TkDivision => 21,
  TkModulo => 22,
  TkProgram => 23,
  TkBy => 24,
  TkNot => 25,
  TkOr => 26,
  TkAnd => 27,
  TkMod => 28,
  TkDiv => 29,
  TkRead => 30,
  TkWrite => 31,
  TkWriteln => 32,
  TkWith => 33,
  TkDo => 34,
  TkEnd => 35,
  TkIf => 36,
  TkThen => 37,
  TkElse => 38,
  TkWhile => 39,
  TkFor => 40,
  TkFrom => 41,
  TkTo => 42,
  TkRepeat => 43,
  TkTimes => 44,
  TkBegin => 45,
  TkFunc => 46,
  TkReturn => 47,
  :UMINUS => 48,
  TkNumber => 49,
  TkId => 50,
  TkString => 51 }

racc_nt_base = 52

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"boolean\"",
  "\"number\"",
  "\"true\"",
  "\"false\"",
  "\"->\"",
  "\";\"",
  "\",\"",
  "\"(\"",
  "\")\"",
  "\"==\"",
  "\"\\\\=\"",
  "\"<=\"",
  "\">=\"",
  "\">\"",
  "\"<\"",
  "\"=\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"program\"",
  "\"by\"",
  "\"not\"",
  "\"or\"",
  "\"and\"",
  "\"mod\"",
  "\"div\"",
  "\"read\"",
  "\"write\"",
  "\"writeln\"",
  "\"with\"",
  "\"do\"",
  "\"end\"",
  "\"if\"",
  "\"then\"",
  "\"else\"",
  "\"while\"",
  "\"for\"",
  "\"from\"",
  "\"to\"",
  "\"repeat\"",
  "\"times\"",
  "\"begin\"",
  "\"func\"",
  "\"return\"",
  "UMINUS",
  "\"num\"",
  "\"id\"",
  "\"str\"",
  "$start",
  "Programa",
  "Instrucciones",
  "Funciones",
  "Funcion",
  "Parametros",
  "InstruccionesF",
  "Tipo",
  "InstruccionF",
  "Expresion",
  "CondicionalF",
  "IteracionF",
  "BloqueF",
  "Expresiones",
  "ElementosSalida",
  "Parametro",
  "Bloque",
  "Declaraciones",
  "Declaracion",
  "Condicional",
  "Iteracion",
  "Instruccion",
  "ElementoSalida" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'Parser.y', 88)
  def _reduce_1(val, _values, result)
    result = Programa.new([], val[1]).set_inicio(val[0].fila).set_fin(val[2].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 89)
  def _reduce_2(val, _values, result)
    result = Programa.new(val[0], val[2]).set_inicio(val[1].fila).set_fin(val[3].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 92)
  def _reduce_3(val, _values, result)
    result = [val[0]]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 93)
  def _reduce_4(val, _values, result)
    result = [val[0]] + val[2]			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 96)
  def _reduce_5(val, _values, result)
    result = Funcion.new(Identificador.new(val[1]), val[3], nil, val[6]).set_inicio(val[0].fila).set_fin(val[7].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 97)
  def _reduce_6(val, _values, result)
    result = Funcion.new(Identificador.new(val[1]), [], nil, val[5]).set_inicio(val[0].fila).set_fin(val[6].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 98)
  def _reduce_7(val, _values, result)
    result = Funcion.new(Identificador.new(val[1]), val[3], val[6], val[8]).set_inicio(val[0].fila).set_fin(val[9].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 99)
  def _reduce_8(val, _values, result)
    result = Funcion.new(Identificador.new(val[1]), [], val[5], val[7]).set_inicio(val[0].fila).set_fin(val[8].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 102)
  def _reduce_9(val, _values, result)
    result = ReturnFuncion.new(val[1]).set_inicio(val[0].fila).set_fin(val[0].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 103)
  def _reduce_10(val, _values, result)
    result = val[0]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 104)
  def _reduce_11(val, _values, result)
    result = val[0]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 105)
  def _reduce_12(val, _values, result)
    result = val[0]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 106)
  def _reduce_13(val, _values, result)
    result = Asignacion.new(Identificador.new(val[0]), val[2]).set_inicio(val[0].fila).set_fin(val[0].fila)				   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 107)
  def _reduce_14(val, _values, result)
    result = LlamadaFuncion.new(Identificador.new(val[0]), val[2]).set_inicio(val[0].fila).set_fin(val[0].fila)			    	   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 108)
  def _reduce_15(val, _values, result)
    result = LlamadaFuncion.new(Identificador.new(val[0]), []).set_inicio(val[0].fila).set_fin(val[0].fila)			    	   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 109)
  def _reduce_16(val, _values, result)
    result = Salida.new(val[1]).set_inicio(val[0].fila).set_fin(val[0].fila)		   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 110)
  def _reduce_17(val, _values, result)
    result = SalidaSalto.new(val[1]).set_inicio(val[0].fila).set_fin(val[0].fila)		   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 111)
  def _reduce_18(val, _values, result)
    result = Entrada.new(Identificador.new(val[1])).set_inicio(val[0].fila).set_fin(val[0].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 114)
  def _reduce_19(val, _values, result)
    result = [val[0]]						
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 115)
  def _reduce_20(val, _values, result)
    result = [val[0]] + val[2]					
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 118)
  def _reduce_21(val, _values, result)
    result = [val[0]]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 119)
  def _reduce_22(val, _values, result)
    result = val[0] + [val[2]]			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 122)
  def _reduce_23(val, _values, result)
    result = Parametro.new(val[0], Identificador.new(val[1])).set_inicio(val[1].fila).set_fin(val[1].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 125)
  def _reduce_24(val, _values, result)
    result = Bloque.new(val[1], val[3]).set_inicio(val[0].fila).set_fin(val[4].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 126)
  def _reduce_25(val, _values, result)
    result = Bloque.new([], val[2]).set_inicio(val[0].fila).set_fin(val[3].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 127)
  def _reduce_26(val, _values, result)
    result = Bloque.new(val[1], []).set_inicio(val[0].fila).set_fin(val[3].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 128)
  def _reduce_27(val, _values, result)
    result = Bloque.new([], []).set_inicio(val[0].fila).set_fin(val[2].fila)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 131)
  def _reduce_28(val, _values, result)
    result = Bloque.new(val[1], val[3]).set_inicio(val[0].fila).set_fin(val[4].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 132)
  def _reduce_29(val, _values, result)
    result = Bloque.new([], val[2]).set_inicio(val[0].fila).set_fin(val[3].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 133)
  def _reduce_30(val, _values, result)
    result = Bloque.new(val[1], []).set_inicio(val[0].fila).set_fin(val[3].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 134)
  def _reduce_31(val, _values, result)
    result = Bloque.new([], []).set_inicio(val[0].fila).set_fin(val[2].fila)
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 138)
  def _reduce_32(val, _values, result)
    result = [val[0]]					
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 139)
  def _reduce_33(val, _values, result)
    result = [val[0]] + val[2]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 142)
  def _reduce_34(val, _values, result)
    result = Declaracion.new(val[0], Identificador.new(val[1]), nil).set_inicio(val[1].fila).set_fin(val[1].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 143)
  def _reduce_35(val, _values, result)
    result = Declaracion.new(val[0], Identificador.new(val[1]), val[3]).set_inicio(val[1].fila).set_fin(val[1].fila)		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 146)
  def _reduce_36(val, _values, result)
    result = Tipo.new(val[0])				   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 147)
  def _reduce_37(val, _values, result)
    result = Tipo.new(val[0])				   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 150)
  def _reduce_38(val, _values, result)
    result = Condicional.new(val[1], val[3], []).set_inicio(val[0].fila).set_fin(val[4].fila)   	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 151)
  def _reduce_39(val, _values, result)
    result = Condicional.new(val[1], val[3], val[5]).set_inicio(val[0].fila).set_fin(val[6].fila)  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 152)
  def _reduce_40(val, _values, result)
    result = Condicional.new(val[1], [], []).set_inicio(val[0].fila).set_fin(val[3].fila)  	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 153)
  def _reduce_41(val, _values, result)
    result = Condicional.new(val[1], val[3], []).set_inicio(val[0].fila).set_fin(val[5].fila)  	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 154)
  def _reduce_42(val, _values, result)
    result = Condicional.new(val[1], [], val[4]).set_inicio(val[0].fila).set_fin(val[5].fila)  	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 157)
  def _reduce_43(val, _values, result)
    result = Condicional.new(val[1], val[3], []).set_inicio(val[0].fila).set_fin(val[4].fila)   	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 158)
  def _reduce_44(val, _values, result)
    result = Condicional.new(val[1], val[3], val[5]).set_inicio(val[0].fila).set_fin(val[6].fila)  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 159)
  def _reduce_45(val, _values, result)
    result = Condicional.new(val[1], [], []).set_inicio(val[0].fila).set_fin(val[3].fila)  	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 160)
  def _reduce_46(val, _values, result)
    result = Condicional.new(val[1], val[3], []).set_inicio(val[0].fila).set_fin(val[5].fila)  	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 161)
  def _reduce_47(val, _values, result)
    result = Condicional.new(val[1], [], val[4]).set_inicio(val[0].fila).set_fin(val[5].fila)  	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 164)
  def _reduce_48(val, _values, result)
    result = IteracionIndeterminada.new(val[1], val[3]).set_inicio(val[0].fila).set_fin(val[4].fila) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 165)
  def _reduce_49(val, _values, result)
    result = IteracionIndeterminada.new(val[1], []).set_inicio(val[0].fila).set_fin(val[3].fila) 	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 166)
  def _reduce_50(val, _values, result)
    result = IteracionDeterminada.new(Identificador.new(val[1]), val[3], val[5], val[7], val[9]).set_inicio(val[0].fila).set_fin(val[10].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 167)
  def _reduce_51(val, _values, result)
    result = IteracionDeterminada.new(Identificador.new(val[1]), val[3], val[5], val[7], []).set_inicio(val[0].fila).set_fin(val[9].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 168)
  def _reduce_52(val, _values, result)
    result = IteracionDeterminada.new(Identificador.new(val[1]), val[3], val[5], nil, val[7]).set_inicio(val[0].fila).set_fin(val[8].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 169)
  def _reduce_53(val, _values, result)
    result = IteracionDeterminada.new(Identificador.new(val[1]), val[3], val[5], nil, []).set_inicio(val[0].fila).set_fin(val[7].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 170)
  def _reduce_54(val, _values, result)
    result = IteracionRepeat.new(val[1], val[3]).set_inicio(val[0].fila).set_fin(val[4].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 171)
  def _reduce_55(val, _values, result)
    result = IteracionRepeat.new(val[1], []).set_inicio(val[0].fila).set_fin(val[3].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 174)
  def _reduce_56(val, _values, result)
    result = IteracionIndeterminada.new(val[1], val[3]).set_inicio(val[0].fila).set_fin(val[4].fila) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 175)
  def _reduce_57(val, _values, result)
    result = IteracionIndeterminada.new(val[1], []).set_inicio(val[0].fila).set_fin(val[3].fila) 	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 176)
  def _reduce_58(val, _values, result)
    result = IteracionDeterminada.new(Identificador.new(val[1]), val[3], val[5], val[7], val[9]).set_inicio(val[0].fila).set_fin(val[10].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 177)
  def _reduce_59(val, _values, result)
    result = IteracionDeterminada.new(Identificador.new(val[1]), val[3], val[5], val[7], []).set_inicio(val[0].fila).set_fin(val[9].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 178)
  def _reduce_60(val, _values, result)
    result = IteracionDeterminada.new(Identificador.new(val[1]), val[3], val[5], nil, val[7]).set_inicio(val[0].fila).set_fin(val[8].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 179)
  def _reduce_61(val, _values, result)
    result = IteracionDeterminada.new(Identificador.new(val[1]), val[3], val[5], nil, []).set_inicio(val[0].fila).set_fin(val[7].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 180)
  def _reduce_62(val, _values, result)
    result = IteracionRepeat.new(val[1], val[3]).set_inicio(val[0].fila).set_fin(val[4].fila)   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 181)
  def _reduce_63(val, _values, result)
    result = IteracionRepeat.new(val[1], []).set_inicio(val[0].fila).set_fin(val[3].fila)	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 184)
  def _reduce_64(val, _values, result)
    result = [val[0]]				   	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 185)
  def _reduce_65(val, _values, result)
    result = [val[0]] + val[2]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 188)
  def _reduce_66(val, _values, result)
    result = Asignacion.new(Identificador.new(val[0]), val[2]).set_inicio(val[0].fila).set_fin(val[0].fila)				   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 189)
  def _reduce_67(val, _values, result)
    result = val[0]									   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 190)
  def _reduce_68(val, _values, result)
    result = val[0] 									   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 191)
  def _reduce_69(val, _values, result)
    result = val[0]							            	   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 192)
  def _reduce_70(val, _values, result)
    result = LlamadaFuncion.new(Identificador.new(val[0]), val[2]).set_inicio(val[0].fila).set_fin(val[0].fila)			    	   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 193)
  def _reduce_71(val, _values, result)
    result = LlamadaFuncion.new(Identificador.new(val[0]), []).set_inicio(val[0].fila).set_fin(val[0].fila)			    	   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 194)
  def _reduce_72(val, _values, result)
    result = Salida.new(val[1]).set_inicio(val[0].fila).set_fin(val[0].fila)		   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 195)
  def _reduce_73(val, _values, result)
    result = SalidaSalto.new(val[1]).set_inicio(val[0].fila).set_fin(val[0].fila)		   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 196)
  def _reduce_74(val, _values, result)
    result = Entrada.new(Identificador.new(val[1])).set_inicio(val[0].fila).set_fin(val[0].fila)	 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 199)
  def _reduce_75(val, _values, result)
    result = [val[0]]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 200)
  def _reduce_76(val, _values, result)
    result = val[0] + [val[2]] 			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 203)
  def _reduce_77(val, _values, result)
    result = String.new(val[0])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 204)
  def _reduce_78(val, _values, result)
    result = val[0]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 207)
  def _reduce_79(val, _values, result)
    result = [val[0]]				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 208)
  def _reduce_80(val, _values, result)
    result = val[0] + [val[2]]			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 211)
  def _reduce_81(val, _values, result)
    result = Numero.new(val[0])				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 212)
  def _reduce_82(val, _values, result)
    result = Booleano.new(val[0])				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 213)
  def _reduce_83(val, _values, result)
    result = Booleano.new(val[0])				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 214)
  def _reduce_84(val, _values, result)
    result = Identificador.new(val[0])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 215)
  def _reduce_85(val, _values, result)
    result = Negativo.new(val[1])				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 216)
  def _reduce_86(val, _values, result)
    result = Suma.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 217)
  def _reduce_87(val, _values, result)
    result = Resta.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 218)
  def _reduce_88(val, _values, result)
    result = Multiplicacion.new(val[0], val[2])		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 219)
  def _reduce_89(val, _values, result)
    result = Division.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 220)
  def _reduce_90(val, _values, result)
    result = Modulo.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 221)
  def _reduce_91(val, _values, result)
    result = MayorQue.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 222)
  def _reduce_92(val, _values, result)
    result = MenorQue.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 223)
  def _reduce_93(val, _values, result)
    result = MayorIgualQue.new(val[0], val[2])		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 224)
  def _reduce_94(val, _values, result)
    result = MenorIgualQue.new(val[0], val[2])		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 225)
  def _reduce_95(val, _values, result)
    result = Igual.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 226)
  def _reduce_96(val, _values, result)
    result = Diferente.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 227)
  def _reduce_97(val, _values, result)
    result = DivisionEntera.new(val[0], val[2])		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 228)
  def _reduce_98(val, _values, result)
    result = ModuloEntero.new(val[0], val[2])		
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 229)
  def _reduce_99(val, _values, result)
    result = And.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 230)
  def _reduce_100(val, _values, result)
    result = Or.new(val[0], val[2])			
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 231)
  def _reduce_101(val, _values, result)
    result = Not.new(val[1])				
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 232)
  def _reduce_102(val, _values, result)
    result = val[1] 					
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 233)
  def _reduce_103(val, _values, result)
    result = LlamadaFuncion.new(Identificador.new(val[0]), val[2])	
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 234)
  def _reduce_104(val, _values, result)
    result = LlamadaFuncion.new(Identificador.new(val[0]), [])	
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
